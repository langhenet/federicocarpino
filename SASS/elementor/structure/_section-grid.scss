/**
 * Standard column gutter and layout
 */
.elementor-section-full_width {

  .elementor-column-wrap {
    height: 100%;
  }
  // On mobile, the widget centers itself vertically
  // to accomodate a possible extended min height
  .elementor-widget-wrap {
    justify-content: center;

    @include breakpoint-min(lg) {
      justify-content: inherit;
    }
  }

  // On mobile Min height for empty columns with just a bg image
  .elementor-row > .column--mob-height .elementor-element-populated {
    padding-bottom: 100%;

    @include breakpoint-min(md) {
      padding-bottom: 50%;
    }
    @include breakpoint-min(lg) {
      padding-bottom: inherit;
    }
  }
}

/*****
 * Custom Force
 ***/
.column--force-right,
.cforce-r {

  // include basic padding when a custom padding is not yet declared
  &:not([class*="pv-"]):not([class*="pt-"]):not([class*="pb-"]) {
    @include pad($v: $l_v_md);
  }

  .elementor-column-wrap {
    @include layout-padding($xl: 0, $lg: 0);
    @include breakpoint-min(lg) {
      max-width: $website-width / 2;
      margin-left: auto;
      margin-right: 0;
    }


    // remove the layout padding
    @include breakpoint-min(xl) {
      padding-left: 0;
    }
  }
}

.column--force-left,
.cforce-l {

  // include basic padding when a custom padding is not yet declared
  &:not([class*="pv-"]):not([class*="pt-"]):not([class*="pb-"]) {
    @include pad($v: $l_v_md);
  }

  .elementor-column-wrap {
    @include layout-padding($xl: 0, $lg: 0);
    @include breakpoint-min(lg) {
      max-width: $website-width / 2;
      margin-right: auto;
      margin-left: 0;
    }


    // remove the layout padding
    @include breakpoint-min(xl) {
      padding-right: 0;
    }
  }
}

// when column are colored, add padding rules, but not if a previous padding is already declared
@each $palette, $color in $palettes {
  .elementor-section-full_width:not(.section--grid) .elementor-column.color--#{$palette},
  .elementor-section-full_width:not(.section--grid) .elementor-column.c-#{$palette} {

    &:not([class*="pv-"]):not([class*="pt-"]):not([class*="pb-"]) {
      @include pad($v: $l_v_md);
    }
  }
}

// Media elements on full with sections have no max-width
.elementor-section-full_width .elementor-widget-image,
.elementor-section-full_width .elementor-widget-video,
.elementor-section-full_width .elementor-widged-map {
  max-width: none;
}


/***********************************************************************
 * Grid sections
 *****************************/
.section--grid {

  .elementor-column {
    @include pad($v: 0);
  }

  .elementor-column-wrap {
    @include pad($v: $l_v_md);

    @include breakpoint-max($col_bp) {
      @include layout-padding($lg: false, $xl: false);
    }

    @include col_pad();

  }

  .elementor-column-gap-narrow .elementor-column-wrap {
    @include pad($v: $l_v_xs);
  }
  .elementor-column-gap-extended .elementor-column-wrap {
    @include pad($v: $l_v_sm);
  }
  .elementor-column-gap-narrow .elementor-column-wrap {
    @include pad($v: $l_v_xs);
  }
  .elementor-column-gap-wide .elementor-column-wrap {
    @include pad($v: $l_v_lg);
  }
  .elementor-column-gap-wider .elementor-column-wrap {
    @include pad($v: $l_v_xl);
  }
}
